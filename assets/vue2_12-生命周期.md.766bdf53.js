import{_ as s,o as n,c as a,e as l}from"./chunks/framework.06699bc1.js";const p=JSON.parse('{"title":"生命周期","description":"","frontmatter":{},"headers":[{"level":3,"title":"1. 生命周期","slug":"_1-生命周期","link":"#_1-生命周期","children":[]},{"level":3,"title":"2.生命周期函数","slug":"_2-生命周期函数","link":"#_2-生命周期函数","children":[]},{"level":3,"title":"3.el挂载和vm.$mount()对比","slug":"_3-el挂载和vm-mount-对比","link":"#_3-el挂载和vm-mount-对比","children":[]},{"level":3,"title":"4.template模板编译","slug":"_4-template模板编译","link":"#_4-template模板编译","children":[]},{"level":3,"title":"5.mounted钩子函数中获取DOM元素的问题","slug":"_5-mounted钩子函数中获取dom元素的问题","link":"#_5-mounted钩子函数中获取dom元素的问题","children":[]}],"relativePath":"vue2/12-生命周期.md"}'),o={name:"vue2/12-生命周期.md"},e=[l('<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h1><h3 id="_1-生命周期" tabindex="-1">1. 生命周期 <a class="header-anchor" href="#_1-生命周期" aria-label="Permalink to &quot;1. 生命周期&quot;">​</a></h3><p>生命周期：就是一个组件从实例化被创建并添加到DOM开始 ,一直到组件被销毁的整个过程 。</p><p>生命周期函数(钩子函数): 就是在Vue生命周期的整个过程的不同阶段被调用的函数</p><h3 id="_2-生命周期函数" tabindex="-1">2.生命周期函数 <a class="header-anchor" href="#_2-生命周期函数" aria-label="Permalink to &quot;2.生命周期函数&quot;">​</a></h3><p>共有8个函数,分别为beforeCreate(),created(),beforeMount(),mounted(),</p><p>beforeUpdate(),updated(),beforeDestroy(),destroyed().</p><p>beforeCreate(): 在组件实例化之前被调用,此时data并没有加载,一般不会在这个阶段做一些事情.</p><p>created(): 组件实例化完成, 可以在这里发送ajax,初始化操作,但此时页面并没有显示</p><p>beforeMount(): 组件挂载之前,页面此时依旧没有显示,但虚拟Dom已经配置完成,此函数需要el(挂载点),或者vm.$mount()</p><p>mounted(): 组件挂载完成, 页面显示,如果有template模板,则会用模板中的内容替换掉el挂载点中的内容.,template只能有一个根节点,根节点不能是文本节点.</p><p>beforeUpdate(): 组件依赖数据变化触发,依赖的数据已经变化,虚拟dom已经配置,但页面此时还未更新,(一般用watch代替,这个方法不太好用).</p><p>updated(): 页面数据变化更新,可以操作dom了.</p><p>beforeDestroy(): 组件销毁前,组件即将被销毁,从dom上移出</p><p>destroyed(): 组件销毁完毕.</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;div id=&quot;root&quot;&gt;{{msg}}&lt;/div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      const vm = new Vue({</span></span>\n<span class="line"><span style="color:#A6ACCD;">        el: &quot;#root&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        data() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          return {</span></span>\n<span class="line"><span style="color:#A6ACCD;">            msg: &quot;hello&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        beforeCreate() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;beforeCreat:vue实例化之前&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        created() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;created:组件实例化完毕&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        beforeMount() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;beforeMount:组件挂载前,页面未显示,虚拟DOM已经配置&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        mounted() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;mounted:组件挂载完毕,页面显示&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        beforeUpdate() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;beforeUpdate:页面依赖数据触发,数据已经改变,但页面并未更新&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        updated(){</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;update:依赖数据更新,更新的数据此时渲染到页面上,页面数据变化&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        beforeDestroy() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;beforeDestroy:组件销毁前&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        destroyed() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          console.log(&quot;destroyed:组件销毁后&quot;, this)</span></span>\n<span class="line"><span style="color:#A6ACCD;">          debugger</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">      })</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;/script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_3-el挂载和vm-mount-对比" tabindex="-1">3.el挂载和vm.$mount()对比 <a class="header-anchor" href="#_3-el挂载和vm-mount-对比" aria-label="Permalink to &quot;3.el挂载和vm.$mount()对比&quot;">​</a></h3><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;div&gt;{{msg}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> &lt;div id=&quot;haha&quot;&gt;{{name}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vm </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">el</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你好</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张丹</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">      vm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#haha</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>如果el和vm.$mount()同时存在,那么只会渲染el模板中的内容.</p><h3 id="_4-template模板编译" tabindex="-1">4.template模板编译 <a class="header-anchor" href="#_4-template模板编译" aria-label="Permalink to &quot;4.template模板编译&quot;">​</a></h3><p>如果我们没有template,模板,我们就会将el 属性对应的挂载点作为我们的模板</p><p>如果有template模板,我们就会用以后的模板替换之前的模板</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> msg </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    const vm = new Vue(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        el:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        template:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;div id=&#39;haha&#39;&gt;大家好&lt;/div&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        data: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_4-1template模板里只能有一个根标签" tabindex="-1">4.1template模板里只能有一个根标签 <a class="header-anchor" href="#_4-1template模板里只能有一个根标签" aria-label="Permalink to &quot;4.1template模板里只能有一个根标签&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vm </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"><span style="color:#C3E88D;">        &lt;div id=&#39;haha&#39;&gt;</span></span>\n<span class="line"><span style="color:#C3E88D;">            大家好</span></span>\n<span class="line"><span style="color:#C3E88D;">        &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#C3E88D;">        &lt;span&gt;&lt;/span&gt;</span></span>\n<span class="line"><span style="color:#C3E88D;">    </span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h4 id="_4-2改变数据绑定的位置" tabindex="-1">4.2改变数据绑定的位置 <a class="header-anchor" href="#_4-2改变数据绑定的位置" aria-label="Permalink to &quot;4.2改变数据绑定的位置&quot;">​</a></h4><p>有template 模板,我们动态绑定的数据,就需要在模板中绑定</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> msg </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    const vm = new Vue(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        el:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        template:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;div id=&#39;haha&#39;&gt;大家好{{ msg }}&lt;/div&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        data: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_5-mounted钩子函数中获取dom元素的问题" tabindex="-1">5.mounted钩子函数中获取DOM元素的问题 <a class="header-anchor" href="#_5-mounted钩子函数中获取dom元素的问题" aria-label="Permalink to &quot;5.mounted钩子函数中获取DOM元素的问题&quot;">​</a></h3><h4 id="_5-1正常在mounted钩子函数里获取dom" tabindex="-1">5.1正常在mounted钩子函数里获取DOM <a class="header-anchor" href="#_5-1正常在mounted钩子函数里获取dom" aria-label="Permalink to &quot;5.1正常在mounted钩子函数里获取DOM&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-html</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    const vm = new Vue(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        el:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        data: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;h2 id=&#39;box&#39;&gt;hello&lt;/h2&gt;</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">mounted</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            console.log(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">mounted:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>\n<span class="line"><span style="color:#F07178;">            console.log(box);</span></span>\n<span class="line"><span style="color:#F07178;">        },</span></span>\n<span class="line"><span style="color:#F07178;">    })</span></span>\n<span class="line"><span style="color:#F07178;">&lt;/script&gt;</span></span></code></pre></div><p>如果我们动态的修改了DOM节点,那么我们在获取时不会更新,获取到的是未更新的节点</p><p>那么我们可以使用$nextTice来解决此类问题</p><p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-html</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    const vm = new Vue(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        el:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        data: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;h2 id=&#39;box&#39;&gt;hello&lt;/h2&gt;</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">mounted</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 动态修改DOM 节点</span></span>\n<span class="line"><span style="color:#A6ACCD;">            this.msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">&lt;h2 id=&quot;box&quot;&gt;你好&lt;/h2&gt;</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 获取DOM 节点</span></span>\n<span class="line"><span style="color:#A6ACCD;">            console.log(box);</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span></span>\n<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 通过$nextTick异步处理方法来获取就会得到最新的值</span></span>\n<span class="line"><span style="color:#A6ACCD;">            this.$nextTick(() =&gt; {</span></span>\n<span class="line"><span style="color:#A6ACCD;">                console.log(box);</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    })</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>',35)];const t=s(o,[["render",function(s,l,p,o,t,c){return n(),a("div",null,e)}]]);export{p as __pageData,t as default};
